name: Deploy Frontend to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.js'
      - 'tailwind.config.js'
      - 'postcss.config.js'
      - 'Dockerfile'
      - 'nginx.conf'
      - '.github/workflows/deploy-frontend.yml'

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: watchme-api-manager
  AWS_ACCOUNT_ID: 754724220380

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }} .

    - name: Tag and push image to ECR
      run: |
        # タグを作成
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        ECR_REGISTRY=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        
        # latest タグ
        docker tag ${{ env.ECR_REPOSITORY }}:latest $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
        
        # タイムスタンプタグ
        docker tag ${{ env.ECR_REPOSITORY }}:latest $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$TIMESTAMP
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$TIMESTAMP
        
        echo "Image pushed with tags: latest and $TIMESTAMP"

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # ECRログイン
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 754724220380.dkr.ecr.ap-southeast-2.amazonaws.com
          
          # 最新イメージをプル
          docker pull 754724220380.dkr.ecr.ap-southeast-2.amazonaws.com/watchme-api-manager:latest
          
          # コンテナを停止して削除
          docker stop api-manager-frontend || true
          docker rm api-manager-frontend || true
          
          # Docker networkが存在しない場合は作成
          docker network create watchme-network 2>/dev/null || true
          
          # 新しいコンテナを起動
          docker run -d \
            --name api-manager-frontend \
            --network watchme-network \
            -p 9001:9001 \
            --restart unless-stopped \
            754724220380.dkr.ecr.ap-southeast-2.amazonaws.com/watchme-api-manager:latest
          
          # ヘルスチェック
          sleep 5
          docker ps | grep api-manager-frontend
          echo "Frontend deployment completed successfully"